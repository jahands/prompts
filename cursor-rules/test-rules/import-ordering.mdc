---
description: Organize imports with external packages first, internal modules second, relative imports last, with blank lines between groups
globs:
alwaysApply: false
---
<import-organization>

<title>Import Organization and Ordering</title>

<rules>
- Group imports into three sections: external packages, internal modules, relative imports
- Order: external packages first, then internal modules, then relative imports
- Add exactly one blank line between each import group
- Sort imports alphabetically within each group
- External packages: npm packages, node built-ins (e.g., 'react', 'fs', '@org/package')
- Internal modules: absolute imports from project root (e.g., 'src/utils', 'app/components')
- Relative imports: imports starting with './' or '../'
- Remove any unused imports
- Combine imports from the same module into a single import statement
</rules>

<examples>
<example type="good">
```typescript
// External packages
import { useState, useEffect } from 'react';
import axios from 'axios';
import fs from 'fs';

// Internal modules
import { AuthService } from 'src/services/auth';
import { UserModel } from 'app/models/user';
import { logger } from 'utils/logger';

// Relative imports
import { Header } from './Header';
import { Footer } from './Footer';
import { formatDate } from '../utils/date';
```
</example>

<example type="bad">
```typescript
import { Header } from './Header';
import { useState, useEffect } from 'react';
import { logger } from 'utils/logger';
import { Footer } from './Footer';
import axios from 'axios';
import { AuthService } from 'src/services/auth';
import fs from 'fs';
import { formatDate } from '../utils/date';
import { UserModel } from 'app/models/user';
```
</example>
</examples>

</import-organization>