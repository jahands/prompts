---
description: Naming conventions for variables, functions, classes, types, and constants
globs:
alwaysApply: false
---
<naming-conventions>

<rules>
- Use camelCase for variables and functions: `myVariable`, `getUserData()`
- Use PascalCase for classes and types: `UserAccount`, `ResponseType`
- Use UPPER_SNAKE_CASE for constants: `MAX_RETRY_COUNT`, `API_TIMEOUT`
- Boolean variables should start with `is`, `has`, or `should`: `isLoading`, `hasPermission`
- Array names should be plural: `users`, `items`, `selectedOptions`
- Function names should be verbs or verb phrases: `calculateTotal()`, `fetchUserData()`
- Class names should be nouns: `Customer`, `OrderManager`, `DatabaseConnection`
</rules>

<examples>
<example type="good">
```typescript
// Constants
const MAX_CONNECTIONS = 100;
const DEFAULT_TIMEOUT_MS = 5000;

// Variables and functions
const userName = "John";
const isAuthenticated = true;
const activeUsers = [];

function getUserById(userId: string) {
  return database.findUser(userId);
}

// Classes and types
class UserService {
  private connectionPool: ConnectionPool;
  
  async createUser(userData: UserData): Promise<User> {
    // Implementation
  }
}

interface UserData {
  firstName: string;
  lastName: string;
  email: string;
}

type UserRole = 'admin' | 'user' | 'guest';
```
</example>
</examples>

</naming-conventions>