---
description: Naming conventions for variables, functions, classes, types, and constants
globs:
alwaysApply: false
---

<naming-conventions>

<title>JavaScript/TypeScript Naming Conventions</title>

<rules>
- Use camelCase for variables and functions
- Use PascalCase for classes and types
- Use UPPER_SNAKE_CASE for constants
- Start boolean variables with is, has, or should
- Use descriptive names that clearly indicate purpose
- Avoid single-letter variables except in loop counters
- Use singular names for single values, plural for arrays/collections
</rules>

<examples>
<example type="good">
```typescript
// Variables and functions - camelCase
const userName = "John";
const userAge = 25;
const isActive = true;
const hasPermission = false;

function calculateTotalPrice(items: Item[]): number {
  return items.reduce((total, item) => total + item.price, 0);
}

// Classes and types - PascalCase
class UserAccount {
  constructor(private email: string) {}
}

interface PaymentMethod {
  type: string;
  lastFourDigits: string;
}

type OrderStatus = "pending" | "shipped" | "delivered";

// Constants - UPPER_SNAKE_CASE
const MAX_RETRY_ATTEMPTS = 3;
const API_BASE_URL = "https://api.example.com";
const DEFAULT_TIMEOUT_MS = 5000;
```
</example>
</examples>

</naming-conventions>