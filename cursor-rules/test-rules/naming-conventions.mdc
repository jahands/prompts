---
description: Naming conventions for variables, functions, classes, types, and constants
globs:
alwaysApply: false
---

<naming-conventions>

<title>JavaScript/TypeScript Naming Conventions</title>

<rules>
- Use camelCase for variables and functions
- Use PascalCase for classes and type definitions
- Use UPPER_SNAKE_CASE for constants
- Prefer descriptive names over abbreviations
- Boolean variables should start with is, has, or can
- Arrays should use plural names
- Avoid single-letter variables except in loops or lambdas
</rules>

<examples>
<example type="good">
```typescript
// Variables and functions - camelCase
const userName = "John";
const isAuthenticated = true;
const userProfiles = [];

function calculateTotalPrice(items) {
  return items.reduce((sum, item) => sum + item.price, 0);
}

// Classes and types - PascalCase
class UserController {
  constructor() {}
}

interface UserProfile {
  name: string;
  email: string;
}

type ResponseStatus = "success" | "error";

// Constants - UPPER_SNAKE_CASE
const MAX_RETRY_ATTEMPTS = 3;
const API_BASE_URL = "https://api.example.com";
const DEFAULT_TIMEOUT_MS = 5000;
```
</example>
</examples>

</naming-conventions>