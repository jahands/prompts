---
description: Keep React components organized - limit component size, extract hooks, colocate tests
globs:
alwaysApply: false
---
<react-component-organization>

<title>React Component Organization</title>

<rules>
- Keep components under 200 lines
- Extract custom hooks to separate files in the same directory
- Name hook files with `use` prefix: `useMyHook.ts`
- Colocate test files with components: `Component.test.tsx`
- Split large components into smaller sub-components
- Place sub-components in the same file if under 50 lines
- Extract sub-components to separate files if over 50 lines
- Group related files in component-specific directories
</rules>

<examples>
<example type="good">
```typescript
// UserProfile/UserProfile.tsx (150 lines)
import { useUserData } from './useUserData';
import { UserAvatar } from './UserAvatar';

export function UserProfile({ userId }: Props) {
  const userData = useUserData(userId);
  
  return (
    <div>
      <UserAvatar user={userData} />
      {/* component logic */}
    </div>
  );
}

// UserProfile/useUserData.ts
export function useUserData(userId: string) {
  // hook logic
}

// UserProfile/UserProfile.test.tsx
describe('UserProfile', () => {
  // tests
});
```
</example>
</examples>

</react-component-organization>